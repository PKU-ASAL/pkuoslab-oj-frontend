{"version":3,"sources":["Component/submission/SubmissionList/ModalSubmissionList.tsx","Component/submission/SubmissionList/SubmissionList.tsx","Assert/img/champion.svg","../node_modules/@ant-design/icons-svg/es/asn/FileTextOutlined.js","../node_modules/@ant-design/icons/es/icons/FileTextOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/HeartFilled.js","../node_modules/@ant-design/icons/es/icons/HeartFilled.js","../node_modules/@ant-design/icons-svg/es/asn/HeartOutlined.js","../node_modules/@ant-design/icons/es/icons/HeartOutlined.js","Component/contest/Rank.tsx","../node_modules/antd/es/typography/Link.js","../node_modules/antd/es/typography/Paragraph.js","../node_modules/antd/es/typography/Text.js","../node_modules/antd/es/typography/index.js","../node_modules/@ant-design/icons-svg/es/asn/TeamOutlined.js","../node_modules/@ant-design/icons/es/icons/TeamOutlined.js","Component/common/Table/TableWithPagination.tsx","Component/common/Table/TableWithAllData.tsx","Component/common/Table/TableWithSelection.tsx"],"names":["withTranslation","withRouter","props","ModalVis","setModalVis","useState","btnProps","onClick","btnText","width","visible","footer","onCancel","connect","state","TState","TableReduce","UState","UserReducer","tableData","roles","userInfo","isLogin","dispatch","addTableVersion","name","type","setSelectedRowKeys","data","setDataSource","add","setTopSubmission","submissionID","submissionInfo","setSubmissionModalVis","webSocketOpen","setWebSocketOpen","webSocketQueryList","setWebSocketQueryList","refreshDisable","setRefreshDisable","selectedRowKeys","ck","dataSource","showSubmission","record","submissionId","title","problemTitle","TimeLimit","timeLimit","MemoryLimit","memoryLimit","scoreMod","undefined","sumScore","testcaseMod","QuerySubmissionAPI","columns","t","dataIndex","key","render","text","style","cursor","TestCase","caseType","StateList","indexOf","SubmissionMap","append","RunningStep","checkpointNum","publicCheckpointNum","Math","floor","moment","format","fromNow","columnsAll","size","problemCodeRender","SyncJudging","open","dataHandle","submissionIdHex","submissionVersion","checkpointIndex","judgeResult","judgeScore","usedTime","usedMemory","dt","Index","findIndex","value","isValueEmpty","cur_cpt","Set","result","toString","localStorage","setItem","score","runningNumber","x","parseInt","queryList","lessInfo","minWidth","className","extra","judgeAuth","ReJudge","API","cApi","rejudge","afterSuccess","icon","ReloadOutlined","message","success","setTimeout","disabled","actions","block","TableWithSelection","disableSelection","defaultPageSize","showSizeChanger","pagination","getForm","useForm","onFinish","Item","label","onPressEnter","e","allowClear","onChange","RunningResultList","map","Option","rowKey","v","length","match","charCodeAt","APIRowsTransForm","push","submitTime","gmtCreate","_path","_path2","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","SvgChampion","titleId","svgRef","viewBox","xmlns","height","ref","id","d","fill","ForwardRef","FileTextOutlined","React","AntdIcon","_objectSpread","FileTextOutlinedSvg","displayName","HeartFilled","HeartFilledSvg","HeartOutlined","HeartOutlinedSvg","State","ContestReducer","ContestInfo","contestInfo","afterContestSubmission","allowSliderMove","sliderTime","openSliderMove","setMinWidth","setAllowSliderMove","setExportData","contestId","params","rankInfo","setRankInfo","setData","timeState","TimeRangeState","gmtStart","gmtEnd","SummaryInfo","setSummaryInfo","lastSliderTime","setLastSliderTime","Date","now","sbl_user","setSbl_user","sbl_pro","setSbl_pro","storedValue","setStoredValue","useEffect","window","getItem","JSON","parse","storeValue","stringify","getRank","then","res","submission","index","submissions","sort","a","b","abs","problemInfo","problems","summaryInfo","SumNumber","submitNum","acceptNum","beforeSort","ACNumber","penalty","cell","official","convertValue","proId","minTim","color","tries","problemWeight","features","mode","min","getDiffSecond","minTime","pending","problemResults","val","max","proSet","sbm","time","submissionBeforeAC","obj","username","nickname","rank","Cell","equ","nowRank","sumIndex","afterSort","problemColumns","row","like","includes","paddingLeft","paddingRight","float","marginTop","filter","textAlign","fontWeight","fontSize","span","tableWidth","String","fromCharCode","problemCode","problemColor","backgroundColor","SData","dataWithLike","lastLikeIndex","dataItem","destroyOnClose","SubmissionList","async","getContestSubmissionList","getContestSubmissionInfo","bordered","rowClassName","summary","Summary","Row","colSpan","TeamOutlined","Icon","component","Champion","keys","Text","ellipsis","tooltip","TimeDiff","__rest","s","p","getOwnPropertySymbols","propertyIsEnumerable","Link","_a","rel","restProps","baseRef","current","mergedProps","navigate","Base","Paragraph","mergedEllipsis","_typeof","omit","Typography","OriginTypography","Title","TeamOutlinedSvg","setTableInfo","total","setTotal","setTableDataX","loading","setLoading","PageNow","setPageNow","PageSize","setPageSize","searchText","setSearchText","tableVersion","setTableVersion","setTableData","getInfo","pageNow","pageSize","searchKey","moreProps","propsTableInfo","tableInfo","form","setFieldsValue","pn","ps","sk","fmp","getFieldsValue","rows","totalNum","totalPage","initRequestProps","values","onReset","resetFields","tf","valuesAfter","propsTableVersion","useList","cardProps","search","placeholder","onSearch","enterButton","useFormBtn","marginLeft","htmlType","grid","itemLayout","renderItem","page","hideOnSinglePage","showQuickJumper","showLessItems","pageSizeOptions","rowSelection","memo","DragHandle","SortableHandle","SortableItem","SortableElement","XSortableContainer","SortableContainer","onSortEnd","oldIndex","newIndex","arrayMoveImmutable","afterDrag","sortColumns","useDrag","concat","components","body","wrapper","useDragHandle","disableAutoscroll","helperClass","nextProps","updateTrick","Component","componentDidMount","selections","onSelect","changeableRowKeys","newSelectedRowKeys","uesAlldata"],"mappings":"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","file":"static/js/25.d6b4f942.chunk.js","sourcesContent":["import {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router-dom\";\nimport React, {useState} from \"react\";\nimport {Button, Modal} from \"antd\";\nimport SubmissionList from \"./SubmissionList\";\n\nconst ModalSubmissionList = (props: any) => {\n    const [ModalVis, setModalVis] = useState<boolean>(false);\n\n    return (\n        <>\n            <Button\n                {...props.btnProps}\n                onClick={() => {\n                    setModalVis(true)\n                }}\n            >\n                {props.btnText}\n            </Button>\n            <Modal\n                width={1250}\n                visible={ModalVis}\n                footer={false}\n                onCancel={() => {\n                    setModalVis(false)\n                }}\n            >\n                <SubmissionList\n                    {...props}\n                />\n            </Modal>\n        </>\n\n    )\n}\n\nexport default withTranslation()(withRouter(ModalSubmissionList))","import {withTranslation} from \"react-i18next\";\nimport {Button, Card, Form, Input, message, Select, Space, Tooltip} from \"antd\";\nimport {SyncJudging} from \"../SyncJudging\";\nimport cApi from \"../../../Utils/API/c-api\";\nimport {ReloadOutlined} from \"@ant-design/icons\";\nimport {RunningResultList, StateList, SubmissionMap, TopSubmissionInfoType} from \"../../../Type/ISubmission\";\nimport TestCase from \"../TestCase\";\nimport React, {Dispatch, useState} from \"react\";\nimport moment from \"moment\";\nimport TableWithSelection from \"../../common/Table/TableWithSelection\";\nimport ReJudge from \"../Func/ReJudge\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {TableState} from \"../../../Type/ITable\";\nimport {ck, isValueEmpty} from \"../../../Utils/empty\";\nimport {UserState} from \"../../../Type/Iuser\";\nimport judgeAuth from \"../../../Utils/judgeAhtu\";\nimport ModalSubmissionList from \"./ModalSubmissionList\";\n\nconst SubmissionList = (props: any) => {\n\n    // 为了动态显示评测点信息，使用 ws 与后端进行链接\n    // ws 是否打开\n    const [webSocketOpen, setWebSocketOpen] = useState<boolean>(false)\n    // ws 发送的信息（在打开时，当前数据的变更将同步发送至 ws）\n    const [webSocketQueryList, setWebSocketQueryList] = useState<string[]>([])\n    const [refreshDisable, setRefreshDisable] = useState<boolean>(false)\n\n    const selectedRowKeys = ck(props.tableData[props.name]?.selectedRowKeys, [])\n    const dataSource = ck(props.tableData[props.name]?.dataSource, [])\n\n    const addCaseInfo = (data: any[]) => {\n\n        const submissionIdHex = data[0]\n        const submissionVersion = data[1]\n        // const checkpointType = data[2]\n        const checkpointIndex = data[3]\n        // const checkpointId = data[4]\n        const judgeResult = data[5]\n        const judgeScore = data[6]\n        const usedTime = data[7]\n        const usedMemory = data[8]\n\n        let dt = dataSource\n        const Index = dt.findIndex((value: any) => value.submissionId === submissionIdHex)\n        if (Index === -1) return\n\n        // 信息如果不存在，初始化信息\n        if (isValueEmpty(dt[Index].cur_cpt)) {\n            dt[Index].cur_cpt = new Set();\n        }\n\n        // 当 checkpointIndex < 0 时，表示同步运行状态\n        // -4: Queueing, -3: Compiling, -2: Judging, -1: End\n        if (checkpointIndex < 0) {\n            dt[Index].result = checkpointIndex.toString()\n            // 结束时，填写评测信息\n            if (checkpointIndex === -1) {\n                localStorage.setItem(`submissionVersion:${submissionIdHex}`, `${submissionVersion}`)\n                dt[Index].result = judgeResult\n                dt[Index].score = judgeScore\n                dt[Index].usedTime = usedTime\n                dt[Index].usedMemory = usedMemory\n            }\n            // 扫描全部评测，检查还有没有未更新完的\n            let runningNumber = 0\n            for (const x of dt) if (parseInt(x.result) <= 0) runningNumber += 1\n            if (runningNumber === 0) setWebSocketOpen(false)\n        } else { // 否则表示同步评测点信息\n            dt[Index].cur_cpt.add(checkpointIndex)\n            dt[Index].RunningStep = dt[Index].cur_cpt.size\n            dt[Index].score += judgeScore\n\n            // 老版本的评测点信息同步\n            // let nowID = 0\n            // if (checkpointType === 0) {\n            //     nowID = checkpointIndex + 1\n            // } else if (checkpointType === 1) {\n            //     nowID = dt[Index].checkpointNum + checkpointIndex + 1\n            // }\n            // if (dt[Index].RunningStep < nowID) {\n            //     dt[Index].RunningStep = nowID\n            //     dt[Index].score += judgeScore\n            // }\n        }\n        props.setDataSource(dt, props.name)\n    }\n\n    const showSubmission = (record: any) => {\n        props.setTopSubmission(record.submissionId, {\n            title: record.problemTitle,\n            TimeLimit: record.timeLimit,\n            MemoryLimit: record.memoryLimit,\n            scoreMod: record.sumScore === undefined ? \"disable\" : \"show\",\n            sumScore: record.sumScore,\n            testcaseMod: \"show\",\n            QuerySubmissionAPI: props.QuerySubmissionAPI\n        })\n        props.setSubmissionModalVis(true)\n    }\n\n    const columns = [\n        {\n            title: props.t(\"results\"),\n            dataIndex: \"result\",\n            key: \"result\",\n            render: (text: any, record: any) => {\n                return (\n                    <div style={{cursor: 'pointer'}} onClick={() => {\n                        showSubmission(record)\n                    }}>\n                        <TestCase\n                            type={\"text\"}\n                            caseType={StateList.indexOf(SubmissionMap[text])}\n                            append={\n                                text === \"-2\" ?\n                                    \"(\" + record.RunningStep + \"/\" + (record.checkpointNum + record.publicCheckpointNum) + \")\"\n                                    : \"\"\n                            }\n                        />\n                    </div>\n\n                )\n            }\n        },\n        {\n            title: props.t(\"score\"),\n            dataIndex: \"score\",\n            key: \"score\",\n            render: (text: number, record: any) => {\n                if (record.sumScore === undefined)\n                    return text\n                return Math.floor(text / record.sumScore * 100) + \"%\"\n            }\n        },\n        {\n            title: props.t(\"submissionTime\"),\n            dataIndex: \"submitTime\",\n            key: \"submitTime\",\n            render: (text: any) => {\n                return (\n                    <Tooltip title={moment(text).format('YYYY-MM-DD HH:mm:ss')}>\n                        <span>{moment(text).fromNow()}</span>\n                    </Tooltip>\n                )\n            }\n        }\n    ]\n\n    const columnsAll = [\n        {\n            title: \"ID\",\n            dataIndex: \"submissionId\",\n            key: \"submissionId\",\n            render: (text: any, record: any) => {\n                return <Button type={\"link\"} size={\"small\"} onClick={() => {\n                    showSubmission(record)\n                }}>\n                    {text}\n                </Button>\n            }\n        },\n        {\n            title: props.t(\"username\"),\n            dataIndex: \"username\",\n            key: \"username\"\n        },\n        {\n            title: props.t(\"problemNo.\"),\n            dataIndex: \"problemCode\",\n            key: \"problemCode\",\n            render: props.problemCodeRender\n        },\n        {\n            title: props.t(\"problemName\"),\n            dataIndex: \"problemTitle\",\n            key: \"problemTitle\"\n        },\n        {\n            title: props.t(\"results\"),\n            dataIndex: \"result\",\n            key: \"result\",\n            width: 170,\n            render: (text: any, record: any) => {\n                return (\n                    <div style={{cursor: 'pointer'}} onClick={() => {\n                        showSubmission(record)\n                    }}>\n                        <TestCase\n                            type={\"text\"}\n                            caseType={StateList.indexOf(SubmissionMap[text])}\n                            append={\n                                text === \"-2\" ?\n                                    \"(\" + record.RunningStep + \"/\" + (record.checkpointNum + record.publicCheckpointNum) + \")\" :\n                                    \"\"\n                            }\n                        />\n                    </div>\n                )\n            }\n        },\n        {\n            title: props.t(\"score\"),\n            dataIndex: \"score\",\n            key: \"score\",\n            render: (text: number, record: any) => {\n                if (record.sumScore === undefined)\n                    return text\n                return Math.floor(text / record.sumScore * 100) + \"%\"\n            }\n        },\n        {\n            title: props.t(\"template\"),\n            dataIndex: \"judgeTemplateTitle\",\n            key: \"judgeTemplateTitle\"\n        },\n        {\n            title: props.t(\"memoryUsage\"),\n            dataIndex: \"usedMemory\",\n            key: \"usedMemory\",\n            render: (text: any) => {\n                return text + \" KB\"\n            }\n        },\n        {\n            title: props.t(\"timeUsage\"),\n            dataIndex: \"usedTime\",\n            key: \"usedTime\",\n            render: (text: any) => {\n                return text + \" ms\"\n            }\n        },\n        {\n            title: props.t(\"submissionTime\"),\n            dataIndex: \"submitTime\",\n            key: \"submitTime\",\n            render: (text: any) => {\n                return (\n                    <Tooltip title={moment(text).format('YYYY-MM-DD HH:mm:ss')}>\n                        <span>{moment(text).fromNow()}</span>\n                    </Tooltip>\n                )\n            }\n        }\n    ]\n\n    const getForm = (onFinish: any) => {\n        return (\n            <Space size={30}>\n                <Form.Item label={props.t(\"username\")} name={\"username\"}>\n                    <Input\n                        onPressEnter={(e: any) => {\n                            onFinish()\n                        }}\n                        allowClear\n                    />\n                </Form.Item>\n                <Form.Item label={props.t(\"problemNo.\")} name={\"problemCode\"}>\n                    <Input\n                        onPressEnter={(e: any) => {\n                            onFinish()\n                        }}\n                        allowClear\n                    />\n                </Form.Item>\n                <Form.Item label={props.t(\"JudgeResult\")} name={\"judgeResult\"}>\n                    <Select onChange={onFinish} allowClear style={{width: 200}}>\n                        {\n                            RunningResultList.map((value) => {\n                                return <Select.Option value={parseInt(value)}>\n                                    <TestCase type={\"text\"}\n                                              caseType={StateList.indexOf(SubmissionMap[value])}/>\n                                </Select.Option>\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n            </Space>\n        )\n    }\n\n    const API = (data: any) => {\n        if (\"problemCode\" in data && !isValueEmpty(data[\"problemCode\"])) {\n            let v: string = data[\"problemCode\"]\n            if (v.length === 1) {\n                if (v.match(/^[a-z]$/) !== null) v = (v.charCodeAt(0) - 'a'.charCodeAt(0) + 1).toString()\n                if (v.match(/^[A-Z]$/) !== null) v = (v.charCodeAt(0) - 'A'.charCodeAt(0) + 1).toString()\n            } else if (v.match(/^[0-9]{4}$/) !== null) {\n                v = \"SDUOJ-\" + v\n            }\n            data[\"problemCode\"] = v\n        }\n        return props.API(data)\n    }\n\n    return (\n        <>\n            <Card\n                title={\n                    <Space>\n                        {props.title !== undefined ? props.title : props.t(\"submissionRecord\")}\n                        <SyncJudging\n                            open={webSocketOpen}\n                            dataHandle={addCaseInfo}\n                            queryList={webSocketQueryList}/>\n                    </Space>\n                }\n                style={props.lessInfo ? {} : {minWidth: 1200}}\n                className={props.lessInfo ? \"smallBodyPadding\" : \"\"}\n                extra={\n                    <Space>\n                        {props.lessInfo !== true && judgeAuth(props.roles, [\"admin\", \"superadmin\"]) && (\n                            <ReJudge\n                                API={cApi.rejudge}\n                                data={selectedRowKeys}\n                                afterSuccess={() => {\n                                    props.addTableVersion(props.name)\n                                    props.setSelectedRowKeys([], props.name)\n                                }}\n                            />\n                        )}\n                        <Button\n                            icon={<ReloadOutlined/>}\n                            onClick={() => {\n                                setRefreshDisable(true)\n                                props.addTableVersion(props.name)\n                                message.success(props.t(\"refreshSuccessfully\"))\n                                setTimeout(() => {\n                                    setRefreshDisable(false)\n                                }, 3000)\n                            }}\n                            disabled={refreshDisable}\n                        >\n                            {props.t(\"refresh\")}\n                        </Button>\n                    </Space>\n                }\n                actions={(props.lessInfo && props.isLogin) ? [\n                    <div>\n                        {props.lessInfo && props.isLogin && (\n                            <ModalSubmissionList\n                                btnProps={{type: \"text\", block: true}}\n                                btnText={props.t(\"ShowAllInformation\")}\n                                name={\"Pro-SubmissionList-\" + props.name}\n                                API={props.API}\n                                QuerySubmissionAPI={props.QuerySubmissionAPI}\n                            />\n                        )}\n                    </div>\n                ] : undefined}\n            >\n                <TableWithSelection\n                    disableSelection={props.lessInfo || !judgeAuth(props.roles, [\"admin\", \"superadmin\"])}\n                    defaultPageSize={props.lessInfo ? 5 : undefined}\n                    showSizeChanger={props.lessInfo ? false : undefined}\n                    pagination={props.lessInfo ? false : undefined}\n                    columns={props.lessInfo ? columns : columnsAll}\n                    getForm={props.useForm === true ? getForm : undefined}\n                    name={props.name}\n                    size={\"small\"}\n                    rowKey={\"submissionId\"}\n                    API={API}\n                    APIRowsTransForm={(value: any) => {\n                        if (isValueEmpty(value)) value = []\n                        let webSocketQueryList = []\n                        let data: any = []\n                        for (const x of value) {\n                            if (x.judgeResult <= 0) webSocketQueryList.push(x.submissionId)\n                            data.push({\n                                ...x,\n                                score: x.judgeScore,\n                                RunningStep: 0,\n                                result: x.judgeResult.toString(),\n                                // sumScore: ck(x.sumScore, 100),\n                                sumScore: x.sumScore,\n                                submitTime: parseInt(x.gmtCreate),\n                            })\n                        }\n                        if (webSocketQueryList.length !== 0) {\n                            setWebSocketOpen(true)\n                            setWebSocketQueryList(webSocketQueryList)\n                        }\n                        return data\n                    }}\n                />\n            </Card>\n        </>\n    )\n}\n\n\nconst mapStateToProps = (state: any) => {\n    const TState: TableState = state.TableReduce\n    const UState: UserState = state.UserReducer\n    return {\n        tableData: TState.tableData,\n        roles: UState.userInfo?.roles,\n        isLogin: UState.isLogin,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    addTableVersion: (name: string) => dispatch({\n        type: \"addTableVersion\",\n        name: name,\n    }),\n    setSelectedRowKeys: (data: React.Key[], name: string) =>\n        dispatch({type: \"setSelectedRowKeys\", data: data, name: name}),\n    setDataSource: (data: any, name: string) =>\n        dispatch({type: \"setDataSource\", data: data, name: name, add: true}),\n    setTopSubmission: (submissionID: string, submissionInfo: TopSubmissionInfoType) => dispatch({\n        type: \"setTopSubmission\",\n        submissionID: submissionID,\n        submissionInfo: submissionInfo\n    }),\n    setSubmissionModalVis: (data: boolean) => dispatch({type: \"setSubmissionModalVis\", data: data})\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(\n    withRouter(SubmissionList)\n))\n","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgChampion({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    t: 1646560118011,\n    className: \"icon\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"p-id\": 1998,\n    width: 200,\n    height: 200,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M877.3632 253.5424h-78.6944V200.192c0-22.0672-17.8688-39.936-39.936-39.936h-482.304c-22.0672 0-39.936 17.8688-39.936 39.936v53.3504H152.1664c-22.0672 0-39.936 17.8688-39.936 39.936v84.0704c0 65.6384 53.248 118.8864 118.8864 118.8864h5.4784c1.9968 142.0288 109.2608 258.56 247.3472 275.0464v89.7536H367.0016a30.8224 30.8224 0 1 0 0 61.6448h295.5264a30.8224 30.8224 0 1 0 0-61.6448h-116.9408v-89.088c140.8-13.9264 251.0336-131.7376 253.0304-275.7632 65.5872-0.1024 118.6816-53.2992 118.6816-118.8864V293.4272c0-22.016-17.8688-39.8848-39.936-39.8848z m-175.1552 213.3504a30.8224 30.8224 0 1 1-61.6448 0v-150.528a30.8224 30.8224 0 1 1 61.6448 0v150.528z\",\n    fill: \"#FCDFAE\",\n    \"p-id\": 1999\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M877.3632 211.7632h-78.6944V158.4128c0-22.0672-17.8688-39.936-39.936-39.936h-482.304c-22.0672 0-39.936 17.8688-39.936 39.936v53.3504H152.1664c-22.0672 0-39.936 17.8688-39.936 39.936v84.0704c0 65.6384 53.248 118.8864 118.8864 118.8864h5.4784c1.9968 142.0288 109.2608 258.56 247.3472 275.0464v89.7536H367.0016a30.8224 30.8224 0 1 0 0 61.6448h295.5264a30.8224 30.8224 0 1 0 0-61.6448h-116.9408v-89.088c140.8-13.9264 251.0336-131.7376 253.0304-275.7632 65.5872-0.1024 118.6816-53.2992 118.6816-118.8864V251.648c0-22.016-17.8688-39.8848-39.936-39.8848z m-175.1552 213.3504a30.8224 30.8224 0 1 1-61.6448 0v-150.528a30.8224 30.8224 0 1 1 61.6448 0v150.528z\",\n    fill: \"#F8B62D\",\n    \"p-id\": 2000\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgChampion);\nexport default __webpack_public_path__ + \"static/media/champion.c6ebe438.svg\";\nexport { ForwardRef as ReactComponent };","// This icon file is generated automatically.\nvar FileTextOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494zM504 618H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM312 490v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8z\" } }] }, \"name\": \"file-text\", \"theme\": \"outlined\" };\nexport default FileTextOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FileTextOutlinedSvg from \"@ant-design/icons-svg/es/asn/FileTextOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FileTextOutlined = function FileTextOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: FileTextOutlinedSvg\n  }));\n};\n\nFileTextOutlined.displayName = 'FileTextOutlined';\nexport default /*#__PURE__*/React.forwardRef(FileTextOutlined);","// This icon file is generated automatically.\nvar HeartFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M923 283.6a260.04 260.04 0 00-56.9-82.8 264.4 264.4 0 00-84-55.5A265.34 265.34 0 00679.7 125c-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5a258.44 258.44 0 00-56.9 82.8c-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3.1-35.3-7-69.6-20.9-101.9z\" } }] }, \"name\": \"heart\", \"theme\": \"filled\" };\nexport default HeartFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport HeartFilledSvg from \"@ant-design/icons-svg/es/asn/HeartFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar HeartFilled = function HeartFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: HeartFilledSvg\n  }));\n};\n\nHeartFilled.displayName = 'HeartFilled';\nexport default /*#__PURE__*/React.forwardRef(HeartFilled);","// This icon file is generated automatically.\nvar HeartOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M923 283.6a260.04 260.04 0 00-56.9-82.8 264.4 264.4 0 00-84-55.5A265.34 265.34 0 00679.7 125c-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5a258.44 258.44 0 00-56.9 82.8c-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3.1-35.3-7-69.6-20.9-101.9zM512 814.8S156 586.7 156 385.5C156 283.6 240.3 201 344.3 201c73.1 0 136.5 40.8 167.7 100.4C543.2 241.8 606.6 201 679.7 201c104 0 188.3 82.6 188.3 184.5 0 201.2-356 429.3-356 429.3z\" } }] }, \"name\": \"heart\", \"theme\": \"outlined\" };\nexport default HeartOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport HeartOutlinedSvg from \"@ant-design/icons-svg/es/asn/HeartOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar HeartOutlined = function HeartOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: HeartOutlinedSvg\n  }));\n};\n\nHeartOutlined.displayName = 'HeartOutlined';\nexport default /*#__PURE__*/React.forwardRef(HeartOutlined);","import {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router-dom\";\nimport {Col, Modal, Row, Space, Table, Typography} from \"antd\";\nimport {ContestState} from \"../../Redux/Action/contest\";\nimport React, {Dispatch, useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport cApi from \"Utils/API/c-api\"\nimport \"Assert/css/ContestRank.css\"\nimport {getDiffSecond, TimeDiff, TimeRangeState} from \"../../Utils/Time\";\nimport {ReactComponent as Champion} from \"Assert/img/champion.svg\"\nimport Icon, {FileTextOutlined, TeamOutlined} from \"@ant-design/icons\";\nimport SubmissionList from \"../submission/SubmissionList/SubmissionList\";\nimport {isValueEmpty} from \"../../Utils/empty\";\nimport {HeartOutlined, HeartFilled} from '@ant-design/icons';\n\n\nconst Rank = (props: any) => {\n    const contestId = props.match.params.contestId\n    const contestInfo = props.ContestInfo[contestId]\n    const [rankInfo, setRankInfo] = useState<any>()\n    const [data, setData] = useState<any>()\n    const timeState = contestInfo !== undefined ? TimeRangeState(contestInfo.gmtStart, contestInfo.gmtEnd) : undefined\n    const [SummaryInfo, setSummaryInfo] = useState<any>({})\n    const [lastSliderTime, setLastSliderTime] = useState<number>(Date.now())\n\n    const [ModalVis, setModalVis] = useState<boolean>(false);\n    const [sbl_user, setSbl_user] = useState<string>(\"\");\n    const [sbl_pro, setSbl_pro] = useState<string>(\"\");\n\n    const [storedValue, setStoredValue] = useState<string[]>([]);\n\n    useEffect(() => {\n        let value: any = window.localStorage.getItem(`contest-like-${contestId}`);\n        if (!isValueEmpty(value)) value = JSON.parse(value)\n        else value = []\n        setStoredValue(value);\n    }, []);\n\n    const storeValue = (value: string[]) => {\n        if (value.length !== 0) {\n            window.localStorage.setItem(`contest-like-${contestId}`, JSON.stringify(value));\n        }\n        setStoredValue(value);\n    };\n\n    useEffect(() => {\n        // console.log(\"00--------------000000000000\", contestInfo)\n        if (rankInfo === undefined) {\n            cApi.getRank({contestId: contestId}).then((res: any) => {\n                // 设置可以滑动\n                if (res.length > 0 && res[0].submission !== null)\n                    props.setAllowSliderMove(true)\n                res.map((value: any, index: number) => {\n                    if (value.submissions !== null)\n                        value.submissions.sort((a: any, b: any) => {\n                            return parseInt(a[1]) - parseInt(b[1])\n                        })\n                })\n                setRankInfo(res)\n            })\n        }\n    }, [rankInfo, setRankInfo, contestId, timeState])\n\n    useEffect(() => {\n        if (rankInfo !== undefined) {\n            if (props.openSliderMove && Math.abs(Date.now() - lastSliderTime) <= 500) return\n            if (props.openSliderMove) setLastSliderTime(Date.now())\n\n            // console.log(props.sliderTime)\n\n\n            const problemInfo = contestInfo.problems\n            const summaryInfo: any = {}\n            summaryInfo.SumNumber = rankInfo.length\n\n            for (let i = 0; i < problemInfo.length; i++) {\n                summaryInfo[`submit_${i}`] = problemInfo[i].submitNum\n                summaryInfo[`ac_${i}`] = problemInfo[i].acceptNum\n                summaryInfo[`user_submit_${i}`] = 0\n                summaryInfo[`user_ac_${i}`] = 0\n                summaryInfo[`first_ac_${i}`] = parseInt(contestInfo.gmtEnd) + 1\n            }\n\n            // 排序前 进行数据预处理\n            const beforeSort = rankInfo.map((value: any, index: number) => {\n                let sumScore = 0, ACNumber = 0, penalty = 0\n                let cell: any = {}\n                const official = value.official\n\n                const convertValue = (value: any, proId: number) => {\n                    let color = \"\", score = 0, minTim: any = undefined, className = \"\"\n                    let tries = 0\n                    if (value.length !== 0) {\n                        // 已经有结果的情况\n                        score = value[1]\n                        sumScore += value[1] * problemInfo[proId].problemWeight\n\n                        if (contestInfo.features.mode === \"acm\") color = \"red\"\n                        else color = \"orange\"\n\n                        if (value[2] === 1) color = \"green\"\n                        if (value[1] === 0) color = \"red\"\n\n                        // 统计数据\n                        summaryInfo[`user_submit_${proId}`] += 1\n                        tries = value[3]\n\n                        if (value[2] === 1) {\n                            summaryInfo[`user_ac_${proId}`] += 1\n                            if (official === true && parseInt(value[0]) !== 0) {\n                                summaryInfo[`first_ac_${proId}`] = Math.min(\n                                    summaryInfo[`first_ac_${proId}`],\n                                    parseInt(value[0])\n                                )\n                            }\n                            className = \"accepted\"\n                            penalty += 20 * value[3]\n                            if (parseInt(value[0]) !== 0) minTim = parseInt(value[0])\n                            penalty += getDiffSecond(contestInfo.gmtStart, minTim) / 60\n                            ACNumber += 1\n\n                        } else if (value[4] !== 0) {\n                            className = \"pending\"\n                            tries -= value[4]\n                        } else {\n                            className = \"rejected\"\n                        }\n\n                        cell[`${proId + 1}`] = {\n                            color: color,\n                            score: score,\n                            minTime: minTim,\n                            tries: tries,\n                            pending: value[4],\n                            className: className\n                        }\n                    }\n                }\n\n                if (value.submissions === null) {\n                    value.problemResults.map((val: any, index: number) => convertValue(val, index))\n                } else {\n                    const sliderTime = Math.max(props.sliderTime, parseInt(contestInfo.gmtStart))\n\n                    let proSet: any = {}\n\n                    for (let i = 0; i < value.submissions.length; i++) {\n                        const sbm = value.submissions[i]\n                        if (!props.afterContestSubmission && parseInt(sbm[1]) > parseInt(contestInfo.gmtEnd)) break\n                        // 控制提交时间筛选\n                        if (props.openSliderMove && parseInt(sbm[1]) > sliderTime) break\n                        const proId = sbm[0]\n\n                        if (proSet[proId] === undefined)\n                            proSet[proId] = {\n                                time: 0,\n                                score: -1,\n                                result: 0,\n                                submission: 0,\n                                submissionBeforeAC: 0,\n                                pending: 0\n                            }\n                        // 取最大的分数，分数相同，取最时间小的\n                        const obj = proSet[proId]\n                        if (obj.score < sbm[2] ||\n                            (obj.score === sbm[2] &&\n                                (obj.time > parseInt(sbm[1]) ||\n                                    (obj.result !== 1 && sbm[3] === 1)\n                                )\n                            )) {\n                            obj.time = parseInt(sbm[1])\n                            obj.score = sbm[2]\n                            obj.result = sbm[3]\n                        }\n                        // 统计当前没有结果的提交数量\n                        if (sbm[3] < 1) obj.pending += 1\n                        // 统计 AC 之前的提交数量\n                        if (obj.result !== 1)\n                            obj.submissionBeforeAC += 1\n                        obj.submission += 1\n                    }\n\n                    for (const x in proSet) {\n                        convertValue([\n                            proSet[x].time.toString(),\n                            proSet[x].score,\n                            proSet[x].result,\n                            proSet[x].submissionBeforeAC + (proSet[x].result === 1 ? 1 : 0),\n                            proSet[x].pending\n                        ], parseInt(x) - 1)\n                    }\n                }\n                return {\n                    username: value.username,\n                    nickname: value.nickname,\n                    official: value.official,\n                    rank: index + 1,\n                    sumScore: sumScore,\n                    Cell: cell,\n                    ACNumber: ACNumber,\n                    penalty: penalty,\n                }\n            })\n\n            // 排序\n            beforeSort.sort((a: any, b: any) => {\n                if (contestInfo.features.mode === \"acm\") {\n                    if (a.ACNumber === b.ACNumber) return a.penalty - b.penalty\n                    return b.ACNumber - a.ACNumber\n                } else if (contestInfo.features.mode === \"ioi\") {\n                    return b.sumScore - a.sumScore\n                }\n            })\n\n            const equ = (a: any, b: any) => {\n                if (contestInfo.features.mode === \"acm\") {\n                    return a.ACNumber === b.ACNumber && Math.abs(a.penalty - b.penalty) < 1e-6\n                } else if (contestInfo.features.mode === \"ioi\") {\n                    return a.sumScore === b.sumScore\n                }\n            }\n\n            // 排序并重置排名\n            let nowRank = 1, sumIndex = 0;\n            const afterSort = beforeSort.map((value: any, index: number) => {\n                if (value.official === false) return {...value, rank: \"*\"}\n                else {\n                    sumIndex += 1;\n                    if (index === 0) return {...value, rank: 1}\n                    else {\n                        if (equ(beforeSort[index - 1], value))\n                            return {...value, rank: nowRank}\n                        nowRank = sumIndex\n                        return {...value, rank: nowRank}\n                    }\n                }\n            })\n\n            setSummaryInfo(summaryInfo)\n            setData(afterSort)\n            props.setExportData(afterSort)\n\n        }\n    }, [rankInfo, props.afterContestSubmission, props.sliderTime])\n\n    const problemColumns: any = [{\n        title: \"排名\",\n        dataIndex: \"rank\",\n        width: 80,\n        render: (text: any) => {\n            return <span className={\"center\"}> {text} </span>\n        }\n    }, {\n        title: \"参赛人\",\n        width: 150,\n        render: (text: any, row: any) => {\n            let like = storedValue.includes(row.username);\n            return (\n                <div style={{paddingLeft: 10, paddingRight: 10}}>\n                    <span style={{float: \"left\", marginTop: 10}}>\n                        {like && (\n                            <HeartFilled style={{color: 'red'}} onClick={() => {\n                                storeValue(storedValue.filter(x => x !== row.username))\n                            }}/>\n                        )}\n                        {!like && (\n                            <HeartOutlined onClick={() => {\n                                storeValue([...storedValue, row.username])\n                            }}/>\n                        )}\n                    </span>\n                    <span style={{float: \"right\", textAlign: \"right\"}}>\n                        <div style={{fontWeight: \"bold\"}}>{row.username}</div>\n                        <div style={{color: \"grey\", fontSize: 12}}>{row.nickname}</div>\n                    </span>\n                </div>\n            )\n        }\n    }, {\n        title: \"分数\",\n        width: 100,\n        render: (text: any, row: any) => {\n            return (\n                <>\n                    {contestInfo.features.mode === \"ioi\" && (\n                        <span>{row.sumScore}</span>\n                    )}\n                    {contestInfo.features.mode === \"acm\" && (\n                        <Row>\n                            <Col span={12}><span\n                                style={{fontWeight: \"bold\"}}>{row.ACNumber}</span></Col>\n                            <Col span={11}><span>{Math.floor(row.penalty)}</span></Col>\n                        </Row>\n                    )}\n                </>\n            )\n        }\n    }]\n    let tableWidth = 330\n    const problemWidth = 70\n\n    if (contestInfo !== undefined) {\n        for (const x of contestInfo.problems) {\n            problemColumns.push({\n                title: (\n                    <div className={\"ProHeader\"}>\n                        <div>\n                            <span style={{fontWeight: \"bold\"}}>\n                                {String.fromCharCode('A'.charCodeAt(0) + parseInt(x.problemCode) - 1)}\n                            </span>\n                            {!isValueEmpty(x.problemColor) && (\n                                <span style={{paddingLeft: 4}}>\n                                    <span className={\"circle\"} style={{backgroundColor: x.problemColor}}/>\n                                </span>\n                            )}\n                        </div>\n                        <div style={{color: \"grey\", fontSize: 12}}>\n                            {x.acceptNum} / {x.submitNum}\n                        </div>\n                    </div>\n                ),\n                width: problemWidth,\n                render: (text: any, row: any) => {\n                    const SData = row.Cell[x.problemCode]\n                    if (SData === undefined) return <></>\n                    return (\n                        <div\n                            style={{cursor: 'pointer'}}\n                            onClick={() => {\n                                setSbl_user(row.username)\n                                setSbl_pro(x.problemCode)\n                                setModalVis(true)\n                            }}>\n                            {contestInfo.features.mode === \"ioi\" && (\n                                <span style={{\n                                    fontWeight: \"bold\",\n                                    color: SData.color\n                                }}>\n                                    {SData.score}\n                                </span>\n                            )}\n                            {contestInfo.features.mode === \"acm\" && (\n                                <div\n                                    className={Math.abs(SData.minTime - SummaryInfo[`first_ac_${x.problemCode - 1}`]) < 1e-6 ? \"firstAccept\" : SData.className}>\n                                    {SData.minTime !== undefined && (\n                                        <div style={{fontSize: 16}}>\n                                            {Math.floor(getDiffSecond(contestInfo.gmtStart, SData.minTime) / 60)}\n                                        </div>\n                                    )}\n                                    {SData.minTime === undefined && (\n                                        <div style={{fontSize: 16}}>\n                                            &nbsp;&nbsp;\n                                        </div>\n                                    )}\n                                    <div>\n                                        <span>\n                                            {SData.tries !== 0 && (\n                                                <span>{SData.tries}</span>\n                                            )}\n                                            {SData.pending !== 0 && (\n                                                <span>\n                                                    {SData.tries !== 0 && (\n                                                        <span>+</span>\n                                                    )}\n                                                    {SData.pending}\n                                                </span>\n                                            )}\n                                            &nbsp;{SData.tries + SData.pending <= 1 ? \"try\" : \"tries\"}\n                                        </span>\n\n\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    )\n                }\n            })\n            tableWidth += problemWidth\n        }\n        if (props.minWidth !== tableWidth)\n            props.setMinWidth(tableWidth)\n    }\n\n    // 创建一个新的 dataWithLike 数组\n    let dataWithLike: any = [];\n    // 保存 like 元素的索引\n    let lastLikeIndex = -1;\n    if (data !== undefined) {\n        for (let i = 0; i < data.length; i++) {\n            let dataItem = data[i];\n            if (storedValue.includes(dataItem.username)) {\n                dataWithLike.push(dataItem);\n                lastLikeIndex = dataWithLike.length - 1;  // 更新 lastLikeIndex\n            }\n        }\n        dataWithLike = [...dataWithLike, ...data]\n    }\n\n\n    return (\n        <>\n            <Modal\n                width={1250}\n                visible={ModalVis}\n                footer={false}\n                destroyOnClose={true}\n                onCancel={() => {\n                    setModalVis(false)\n                }}\n            >\n                <SubmissionList\n                    btnText={\"记录-\" + sbl_user + \"-\" + sbl_pro}\n                    name={\"Contest-Rank-SubmissionList-\" + sbl_user + \"-\" + sbl_pro}\n                    API={async (data: any) => {\n                        return cApi.getContestSubmissionList({\n                            ...data,\n                            problemCode: sbl_pro,\n                            username: sbl_user,\n                            contestId: contestId\n                        })\n                    }}\n                    QuerySubmissionAPI={async (submissionId: string) => {\n                        return cApi.getContestSubmissionInfo({contestId: contestId, submissionId: submissionId})\n                    }}\n                />\n            </Modal>\n            <Table\n                className={\"RankTable\"}\n                style={{width: tableWidth, minWidth: tableWidth}}\n                pagination={false}\n                bordered={true}\n                dataSource={dataWithLike}\n                rowClassName={(row, index) => {\n                    let className = 'rowBase';\n                    if (index === lastLikeIndex) {\n                        className += ' rowLikeLast';\n                    }\n                    if (storedValue.includes(row.username)) {\n                        className += ' rowLike';\n                    }\n                    return className;\n                }}\n                columns={problemColumns}\n                summary={() => (\n                    <Table.Summary>\n                        <Table.Summary.Row className={\"RankSummary\"}>\n                            <Table.Summary.Cell index={0} colSpan={2}>\n                                <Space size={50}>\n                                    总结\n                                    <div style={{textAlign: \"left\", fontSize: 12}}>\n                                        <div><FileTextOutlined/> 通过数/提交数</div>\n                                        <div><TeamOutlined/> 通过用户/提交用户</div>\n                                        <div><Icon component={Champion}/> 最早通过</div>\n                                    </div>\n                                </Space>\n                            </Table.Summary.Cell>\n                            {Object.keys(SummaryInfo).length !== 0 && (\n                                <>\n                                    <Table.Summary.Cell index={1}> <TeamOutlined/> {SummaryInfo.SumNumber}\n                                    </Table.Summary.Cell>\n                                    {contestInfo.problems.map((x: any) => {\n                                        const i = parseInt(x.problemCode) - 1\n                                        return (\n                                            <Table.Summary.Cell index={2 + i} className={\"RankSummary-Pro\"}>\n                                                <div>\n                                                    <FileTextOutlined/> {SummaryInfo[`ac_${i}`]}/{SummaryInfo[`submit_${i}`]}\n                                                </div>\n                                                <div>\n                                                    <TeamOutlined/> {SummaryInfo[`user_ac_${i}`]}/{SummaryInfo[`user_submit_${i}`]}\n                                                </div>\n                                                <div>\n                                                    {parseInt(contestInfo.gmtEnd) + 1 !== SummaryInfo[`first_ac_${i}`] && (\n                                                        <div>\n                                                            <Icon component={Champion}/>\n                                                            <Typography.Text ellipsis={{\n                                                                tooltip: TimeDiff(contestInfo.gmtStart, SummaryInfo[`first_ac_${i}`], \"d\", \"h\", \"m\", \"s\"),\n                                                            }} style={{width: 50}}>\n                                                                {TimeDiff(contestInfo.gmtStart, SummaryInfo[`first_ac_${i}`], \"d\", \"h\", \"m\", \"s\")}\n                                                            </Typography.Text>\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            </Table.Summary.Cell>\n                                        )\n                                    })}\n                                </>\n                            )}\n                        </Table.Summary.Row>\n                    </Table.Summary>\n                )}\n            >\n\n            </Table>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    const State: ContestState = state.ContestReducer\n\n    return {\n        ContestInfo: State.contestInfo,\n        minWidth: State.minWidth,\n        afterContestSubmission: State.afterContestSubmission,\n        allowSliderMove: State.allowSliderMove,\n        sliderTime: State.sliderTime,\n        openSliderMove: State.openSliderMove\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setMinWidth: (data: number) => dispatch({\n        type: \"setMinWidth\", data: data\n    }),\n    setAllowSliderMove: (data: boolean) => dispatch({\n        type: \"setAllowSliderMove\", data: data\n    }),\n    setExportData: (data: any) => dispatch({\n        type: \"setExportData\", data: data\n    })\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(withRouter(Rank)))\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport Base from './Base';\n\nvar Link = function Link(_a, ref) {\n  var ellipsis = _a.ellipsis,\n      rel = _a.rel,\n      restProps = __rest(_a, [\"ellipsis\", \"rel\"]);\n\n  process.env.NODE_ENV !== \"production\" ? warning(_typeof(ellipsis) !== 'object', 'Typography.Link', '`ellipsis` only supports boolean value.') : void 0;\n  var baseRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return baseRef.current;\n  });\n\n  var mergedProps = _extends(_extends({}, restProps), {\n    rel: rel === undefined && restProps.target === '_blank' ? 'noopener noreferrer' : rel\n  }); // https://github.com/ant-design/ant-design/issues/26622\n  // @ts-ignore\n\n\n  delete mergedProps.navigate;\n  return /*#__PURE__*/React.createElement(Base, _extends({}, mergedProps, {\n    ref: baseRef,\n    ellipsis: !!ellipsis,\n    component: \"a\"\n  }));\n};\n\nexport default /*#__PURE__*/React.forwardRef(Link);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Base from './Base';\n\nvar Paragraph = function Paragraph(props, ref) {\n  return /*#__PURE__*/React.createElement(Base, _extends({\n    ref: ref\n  }, props, {\n    component: \"div\"\n  }));\n};\n\nexport default /*#__PURE__*/React.forwardRef(Paragraph);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport Base from './Base';\n\nvar Text = function Text(_a, ref) {\n  var ellipsis = _a.ellipsis,\n      restProps = __rest(_a, [\"ellipsis\"]);\n\n  var mergedEllipsis = React.useMemo(function () {\n    if (ellipsis && _typeof(ellipsis) === 'object') {\n      return omit(ellipsis, ['expandable', 'rows']);\n    }\n\n    return ellipsis;\n  }, [ellipsis]);\n  process.env.NODE_ENV !== \"production\" ? warning(_typeof(ellipsis) !== 'object' || !ellipsis || !('expandable' in ellipsis) && !('rows' in ellipsis), 'Typography.Text', '`ellipsis` do not support `expandable` or `rows` props.') : void 0;\n  return /*#__PURE__*/React.createElement(Base, _extends({\n    ref: ref\n  }, restProps, {\n    ellipsis: mergedEllipsis,\n    component: \"span\"\n  }));\n};\n\nexport default /*#__PURE__*/React.forwardRef(Text);","import Link from './Link';\nimport Paragraph from './Paragraph';\nimport Text from './Text';\nimport Title from './Title';\nimport OriginTypography from './Typography';\nvar Typography = OriginTypography;\nTypography.Text = Text;\nTypography.Link = Link;\nTypography.Title = Title;\nTypography.Paragraph = Paragraph;\nexport default Typography;","// This icon file is generated automatically.\nvar TeamOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M824.2 699.9a301.55 301.55 0 00-86.4-60.4C783.1 602.8 812 546.8 812 484c0-110.8-92.4-201.7-203.2-200-109.1 1.7-197 90.6-197 200 0 62.8 29 118.8 74.2 155.5a300.95 300.95 0 00-86.4 60.4C345 754.6 314 826.8 312 903.8a8 8 0 008 8.2h56c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5A226.62 226.62 0 01612 684c60.9 0 118.2 23.7 161.3 66.8C814.5 792 838 846.3 840 904.3c.1 4.3 3.7 7.7 8 7.7h56a8 8 0 008-8.2c-2-77-33-149.2-87.8-203.9zM612 612c-34.2 0-66.4-13.3-90.5-37.5a126.86 126.86 0 01-37.5-91.8c.3-32.8 13.4-64.5 36.3-88 24-24.6 56.1-38.3 90.4-38.7 33.9-.3 66.8 12.9 91 36.6 24.8 24.3 38.4 56.8 38.4 91.4 0 34.2-13.3 66.3-37.5 90.5A127.3 127.3 0 01612 612zM361.5 510.4c-.9-8.7-1.4-17.5-1.4-26.4 0-15.9 1.5-31.4 4.3-46.5.7-3.6-1.2-7.3-4.5-8.8-13.6-6.1-26.1-14.5-36.9-25.1a127.54 127.54 0 01-38.7-95.4c.9-32.1 13.8-62.6 36.3-85.6 24.7-25.3 57.9-39.1 93.2-38.7 31.9.3 62.7 12.6 86 34.4 7.9 7.4 14.7 15.6 20.4 24.4 2 3.1 5.9 4.4 9.3 3.2 17.6-6.1 36.2-10.4 55.3-12.4 5.6-.6 8.8-6.6 6.3-11.6-32.5-64.3-98.9-108.7-175.7-109.9-110.9-1.7-203.3 89.2-203.3 199.9 0 62.8 28.9 118.8 74.2 155.5-31.8 14.7-61.1 35-86.5 60.4-54.8 54.7-85.8 126.9-87.8 204a8 8 0 008 8.2h56.1c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5 29.4-29.4 65.4-49.8 104.7-59.7 3.9-1 6.5-4.7 6-8.7z\" } }] }, \"name\": \"team\", \"theme\": \"outlined\" };\nexport default TeamOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TeamOutlinedSvg from \"@ant-design/icons-svg/es/asn/TeamOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TeamOutlined = function TeamOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TeamOutlinedSvg\n  }));\n};\n\nTeamOutlined.displayName = 'TeamOutlined';\nexport default /*#__PURE__*/React.forwardRef(TeamOutlined);","import {Button, Card, Form, List, Space, Table} from \"antd\";\nimport React, {Dispatch, useEffect, useState} from \"react\";\nimport {defaultPageSize} from \"../../../Config/constValue\";\nimport {UserState} from \"../../../Type/Iuser\";\nimport {connect} from \"react-redux\";\nimport {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport Search from \"antd/es/input/Search\";\nimport {TableState} from \"../../../Type/ITable\";\nimport {ck} from \"../../../Utils/empty\";\nimport {SizeType} from \"antd/lib/config-provider/SizeContext\";\nimport {ColumnsType} from \"antd/lib/table/interface\";\nimport {useForm} from \"antd/es/form/Form\";\n\nexport interface TableWithPaginationProps {\n    API: any                  // 表格查询数据的接口\n    size: SizeType            // 表格的大小\n    columns: ColumnsType<any> // 表格的列\n    name: string              // 表格名称\n    APIRowsTransForm?: any    // 针对API传输的数据进行转化的函数\n    search?: boolean          // 是否开启搜索功能\n    defaultPageSize?: number  // 表格默认的页大小\n\n    // 面向 可选择的行 开放的接口\n    // setDataSource?: any       // 输出当前表格的数据\n    rowKey?: any              // 作为 key 记录的值\n    rowSelection?: any        // 可选列的相关配置\n\n}\n\nconst TableWithPagination = (props: any) => {\n    const [total, setTotal] = useState<number>(0)                   // 项的总数\n    const [tableData, setTableDataX] = useState()                            // 表格核心数据\n    const [loading, setLoading] = useState(true)                    // 表格的加载状态\n    const [PageNow, setPageNow] = useState<number>(1)               // 当前的页码数\n    const [PageSize, setPageSize] = useState<number>(ck(props.defaultPageSize, defaultPageSize))         // 当前的页大小\n    const [searchText, setSearchText] = useState<string | undefined>()        // 搜索的文本\n    const [tableVersion, setTableVersion] = useState<number>(0)     // 表格版本（控制表格刷新）\n\n    const setTableData = (data: any) => {\n        setTableDataX(data)\n        // 若有 选中行 的相关配置，传递数据进行更新\n        if (props.setDataSource !== undefined && props.name !== undefined)\n            props.setDataSource(data, props.name)\n    }\n    // 这里的所有的参数都只能增量的修改，不能删除，删除需要手动更新 redux\n    const getInfo = (pageNow?: number, pageSize?: number, searchKey?: string, moreProps?: any) => {\n        const propsTableInfo = props.tableData[props.name]?.tableInfo\n        if (propsTableInfo !== undefined) {\n            if (moreProps === undefined && propsTableInfo.moreProps !== undefined){\n                form.setFieldsValue(propsTableInfo.moreProps)\n            }\n            pageNow = pageNow ?? propsTableInfo.pageNow\n            pageSize = pageSize ?? propsTableInfo.pageSize\n            searchKey = searchKey ?? propsTableInfo.searchKey\n            moreProps = moreProps ?? propsTableInfo.moreProps\n        }\n        let pn = pageNow ?? PageNow\n        let ps = pageSize ?? PageSize\n        let sk = searchKey ?? searchText\n        let fmp = moreProps ?? form.getFieldsValue()\n        setPageNow(pn)\n        setPageSize(ps)\n        setSearchText(sk)\n        setLoading(true)\n        props.API({\n            pageNow: pn,\n            pageSize: ps,\n            searchKey: sk,\n            ...fmp\n        }).then((data: any) => {\n            // console.log(\"data\", data)\n            if (data.rows === null) data.rows = []\n            if (props.APIRowsTransForm !== undefined) {\n                setTableData(props.APIRowsTransForm(data.rows))\n            } else setTableData(data.rows)\n            if (data.totalNum !== undefined && data.totalNum !== \"0\") {\n                setTotal(data.totalNum)\n                props.name && props.setTableInfo(props.name, {\n                    total: data.totalNum,\n                    pageNow: pn,\n                    pageSize: ps,\n                    searchKey: sk,\n                    moreProps: fmp\n                })\n            } else {\n                setTotal(ps * data.totalPage);\n                props.name && props.setTableInfo(props.name, {\n                    total: ps * data.totalPage,\n                    pageNow: pn,\n                    pageSize: ps,\n                    searchKey: sk,\n                    moreProps: fmp\n                })\n            }\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        form.setFieldsValue(props.initRequestProps)\n        getInfo()\n    }, [props.name])\n\n    // 带有表单的筛选\n    const [form] = useForm()\n    const onFinish = () => {\n        const values = form.getFieldsValue()\n        if (JSON.stringify(values) !== \"{}\")\n            getInfo(1, PageSize, undefined, values)\n    };\n    const onReset = () => {\n        const values = form.getFieldsValue()\n        form.resetFields();\n        const tf = props.tableData[props.name]?.tableInfo\n        props.name && props.setTableInfo(props.name, {\n            total: tf.total,\n            pageNow: tf.pageNow,\n            pageSize: tf.pageSize,\n            searchKey: tf.searchKey,\n            moreProps: undefined\n        })\n        const valuesAfter = form.getFieldsValue()\n        // 重置前后若发生改变，则重新加载表格\n        if (JSON.stringify(values) !== JSON.stringify(valuesAfter))\n            getInfo(1, PageSize, undefined, undefined)\n\n    };\n\n\n    useEffect(() => {\n        // 监听表格的版本变化，当版本变更时更新表格\n        const propsTableVersion = props.tableData[props.name]?.tableVersion\n        if (propsTableVersion !== undefined && tableVersion !== propsTableVersion) {\n            // 如果数据被外部应用更新，则用 redux 中的数据更新当前行\n            if (propsTableVersion < 0) {\n                setTableVersion(-propsTableVersion)\n                setTableDataX(props.tableData[props.name]?.dataSource)\n            } else {\n                // 否则，重新进行请求\n                setTableVersion(propsTableVersion)\n                const values = form.getFieldsValue()\n                getInfo(PageNow, PageSize, searchText, values)\n            }\n        }\n    }, [props.tableData, tableVersion])\n\n    return (\n        <>\n            {props.useList && (\n                <Card\n                    title={props.title}\n                    bordered={true}\n                    size={\"default\"}\n                    className={props.cardProps ?? \"zeroBodyPaddingLeft\"}\n                    extra={\n                        (props.search === true || props.getForm !== undefined) && (\n                            <>\n                                {props.search === true && (\n                                    <Search\n                                        key={\"search\"}\n                                        placeholder={props.t(\"searchUser\")}\n                                        onSearch={(text) => {\n                                            setSearchText(text)\n                                            setPageNow(1)\n                                            const values = form.getFieldsValue()\n                                            getInfo(1, PageSize, text, values)\n                                        }}\n                                        enterButton\n                                        style={{width: 300}}\n                                    />\n                                )}\n                                {props.getForm !== undefined && (\n                                    <Form form={form}>\n                                        {props.getForm(onFinish)}\n                                        {props.useFormBtn && (\n                                            <Space style={{marginLeft: \"30px\"}} size={20}>\n                                                <Button type=\"primary\" onClick={onFinish}>\n                                                    筛选\n                                                </Button>\n                                                <Button htmlType=\"button\" onClick={onReset}>\n                                                    重置\n                                                </Button>\n                                            </Space>\n                                        )}\n                                    </Form>\n                                )}\n                            </>\n                        )\n                    }\n                >\n                    <List\n                        grid={props.grid}\n                        itemLayout={\"vertical\"}\n                        loading={loading}\n                        size={props.size}\n                        dataSource={tableData}\n                        renderItem={props.renderItem}\n                        pagination={{\n                            onChange: (page, pageSize) => {\n                                getInfo(page, pageSize)\n                            },\n                            current: PageNow,\n                            pageSize: PageSize,\n                            total: total,\n                            size: \"small\",\n                            hideOnSinglePage: true,\n                            showQuickJumper: true,\n                            showLessItems: true,\n                            showSizeChanger: ck(props.showSizeChanger, true),\n                            pageSizeOptions: [\"5\", \"15\", \"20\", \"50\", \"80\"],\n                        }}\n                    />\n                </Card>\n            )}\n            {!props.useList && (\n                <Card\n                    bordered={false}\n                    size={\"small\"}\n                    extra={\n                        (props.search === true || props.getForm !== undefined) && (\n                            <>\n                                {props.search === true && (\n                                    <Search\n                                        key={\"search\"}\n                                        placeholder={\"搜索\"}\n                                        onSearch={(text) => {\n                                            setSearchText(text)\n                                            setPageNow(1)\n                                            getInfo(1, PageSize, text)\n                                        }}\n                                        enterButton\n                                        style={{width: 300}}\n                                    />\n                                )}\n                                {props.getForm !== undefined && (\n                                    <Form form={form}>\n                                        {props.getForm(onFinish)}\n                                        <Space style={{marginLeft: \"30px\"}} size={20}>\n                                            <Button type=\"primary\" onClick={onFinish}>\n                                                {props.t(\"filtering\")}\n                                            </Button>\n                                            <Button htmlType=\"button\" onClick={onReset}>\n                                                {props.t(\"Reset\")}\n                                            </Button>\n                                        </Space>\n                                    </Form>\n                                )}\n                            </>\n                        )\n                    }\n                >\n                    <Table\n                        rowKey={props.rowKey}\n                        loading={loading}\n                        size={props.size}\n                        columns={props.columns}\n                        rowSelection={props.rowSelection}\n                        dataSource={tableData}\n                        pagination={props.pagination ?? {\n                            onChange: (page, pageSize) => {\n                                getInfo(page, pageSize)\n                            },\n                            current: PageNow,\n                            pageSize: PageSize,\n                            total: total,\n                            hideOnSinglePage: false,\n                            showQuickJumper: true,\n                            showLessItems: true,\n                            showSizeChanger: ck(props.showSizeChanger, true),\n                            pageSizeOptions: [\"5\", \"15\", \"20\", \"50\", \"80\"],\n                        }}\n                    />\n                </Card>\n            )}\n        </>\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    const UState: UserState = state.UserReducer\n    const TState: TableState = state.TableReduce\n    return {\n        roles: UState.userInfo?.roles,\n        tableData: {...TState.tableData}\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setTableInfo: (name: string, data: any) => dispatch({\n        type: \"setTableInfo\",\n        name: name,\n        data: data\n    }),\n    setDataSource: (data: any, name: string) =>\n        dispatch({type: \"setDataSource\", data: data, name: name, add: false})\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(\n    withRouter(TableWithPagination)\n))\n\n","import {Table} from \"antd\";\nimport React, {Dispatch, useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {TableState} from \"../../../Type/ITable\";\nimport {SizeType} from \"antd/lib/config-provider/SizeContext\";\nimport {ColumnsType} from \"antd/lib/table/interface\";\nimport {SortableContainer, SortableElement, SortableHandle} from \"react-sortable-hoc\";\nimport {MenuOutlined} from \"@ant-design/icons\";\nimport {arrayMoveImmutable} from \"array-move\";\n\nexport interface TableWithPaginationProps {\n    API: any                  // 表格查询数据的接口\n    size: SizeType            // 表格的大小\n    columns: ColumnsType<any> // 表格的列\n    name: string              // 表格名称\n    APIRowsTransForm?: any    // 针对API传输的数据进行转化的函数\n\n    // 面向 可选择的行 开放的接口\n    rowKey?: any              // 作为 key 记录的值\n\n}\n\nconst TableWithAllData = (props: any) => {\n    const [tableData, setTableDataX] = useState([])                            // 表格核心数据\n    const [loading, setLoading] = useState(true)                    // 表格的加载状态\n    const [tableVersion, setTableVersion] = useState<number>(0)     // 表格版本（控制表格刷新）\n    // const [sortSwitch, setSortSwitch] = useState<boolean>(false);           // 操作是否开启排序模式\n\n\n    const setTableData = (data: any) => {\n        setTableDataX(data)\n        // 若有 选中行 的相关配置，传递数据进行更新\n        if (props.setDataSource !== undefined && props.name !== undefined)\n            props.setDataSource(data, props.name)\n    }\n\n    const getInfo = () => {\n        setLoading(true)\n        props.API().then((data: any) => {\n            // console.log(\"data\", data)\n            if (data === null) data = []\n            if (props.APIRowsTransForm !== undefined) {\n                setTableData(props.APIRowsTransForm(data))\n            } else setTableData(data)\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        getInfo()\n    }, [props.name])\n\n    useEffect(() => {\n        // 监听表格的版本变化，当版本变更时更新表格\n        const propsTableVersion = props.tableData[props.name]?.tableVersion\n        if (propsTableVersion !== undefined && tableVersion !== propsTableVersion) {\n            // 如果数据被外部应用更新，则用 redux 中的数据更新当前行\n            if (propsTableVersion < 0) {\n                setTableVersion(-propsTableVersion)\n                setTableDataX(props.tableData[props.name]?.dataSource)\n            } else {\n                // 否则，重新进行请求\n                setTableVersion(propsTableVersion)\n                getInfo()\n            }\n        }\n    }, [props.tableData, tableVersion])\n\n    // === 拖拽排序 ===\n    // 可拖拽的排序手柄\n    const DragHandle = SortableHandle(() => <MenuOutlined style={{cursor: 'grab', color: '#999'}}/>);\n    const SortableItem = SortableElement((props: any) => <tr {...props} />);\n    const XSortableContainer = SortableContainer((props: any) => <tbody {...props} />);\n    // 排序结束后\n    const onSortEnd = ({oldIndex, newIndex}: any) => {\n        // 当前排序是有效的\n        if (oldIndex !== newIndex) {\n            // 移动数组中的元素，并设置到当前的状态\n            setTableData(arrayMoveImmutable(tableData, oldIndex, newIndex))\n            props.afterDrag && props.afterDrag(tableData, oldIndex, newIndex)\n        }\n    };\n    const DraggableContainer = (props: any) => {\n        return (\n            <XSortableContainer\n                useDragHandle\n                disableAutoscroll\n                helperClass=\"row-dragging\"\n                onSortEnd={onSortEnd}\n                {...props}\n            />\n        )\n    }\n    const DraggableBodyRow = ({className, style, ...restProps}: any) => {\n        // function findIndex base on Table rowKey props and should always be a right array index\n        const index = tableData.findIndex((x: any) => x[props.rowKey] === restProps['data-row-key']);\n        return <SortableItem index={index} {...restProps} />\n    };\n    const sortColumns: any[] = [\n        {\n            title: \"\",\n            dataIndex: 'sort',\n            width: 50,\n            className: \"drag-visable\",\n            render: () => <DragHandle/>,\n        }\n    ]\n\n    let columns = props.columns;\n    if (props.useDrag) columns = sortColumns.concat(columns)\n\n    return (\n        <Table\n            {...props}\n            rowSelection={props.rowSelection}\n            rowKey={props.rowKey}\n            loading={loading}\n            size={props.size}\n            columns={columns}\n            dataSource={tableData}\n            pagination={false}\n            components={{\n                body: {\n                    wrapper: DraggableContainer,\n                    row: DraggableBodyRow,\n                },\n            }}\n        />\n    )\n\n}\n\nconst mapStateToProps = (state: any) => {\n    const TState: TableState = state.TableReduce\n    return {\n        tableData: {...TState.tableData}\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setTableInfo: (name: string, data: any) => dispatch({\n        type: \"setTableInfo\",\n        name: name,\n        data: data\n    }),\n    setDataSource: (data: any, name: string) =>\n        dispatch({type: \"setDataSource\", data: data, name: name, add: false})\n})\n\nexport default React.memo(connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )(withTranslation()(\n        withRouter(TableWithAllData))), (props: any, nextProps: any) => {\n        return props.columns === nextProps.columns &&\n            (props.rowSelection?.selectedRowKeys.length === nextProps.rowSelection?.selectedRowKeys.length) &&\n            props.tableData === nextProps.tableData &&\n            props.updateTrick ===  nextProps.updateTrick\n    }\n)\n\n","import React, {Component, Dispatch} from \"react\";\nimport {withTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport TableWithPagination from \"./TableWithPagination\";\nimport {TableState} from \"../../../Type/ITable\";\nimport {ck} from \"../../../Utils/empty\";\nimport TableWithAllData from \"./TableWithAllData\";\n\n\nclass TableWithSelection extends Component<any, any> {\n\n    componentDidMount() {\n\n    }\n\n    setSelectedRowKeys = (data: any) =>{\n        this.props.setSelectedRowKeys(data, this.props.name)\n    }\n\n    render() {\n        const selectedRowKeys = ck(this.props.tableData[this.props.name]?.selectedRowKeys, [])\n        let rowSelection: any = {\n            selectedRowKeys,\n            onChange: (selectedRowKeys: React.Key[]) => {\n                this.setSelectedRowKeys(selectedRowKeys)\n            },\n            // 多选时的下拉选项\n            selections: [\n                {\n                    key: 'all',\n                    text: this.props.t(\"selectedAll\"),\n                    onSelect: (changeableRowKeys: React.Key[]) => {\n                        let newSelectedRowKeys = changeableRowKeys\n                        newSelectedRowKeys = newSelectedRowKeys.concat(selectedRowKeys.filter((key: React.Key) => {\n                            return !changeableRowKeys.includes(key);\n                        }))\n                        this.setSelectedRowKeys(newSelectedRowKeys)\n                    },\n                },\n                {\n                    key: 'clear',\n                    text: this.props.t(\"clear\"),\n                    onSelect: (changeableRowKeys: React.Key[]) => {\n                        let newSelectedRowKeys = selectedRowKeys.filter((key: React.Key) => {\n                            return !changeableRowKeys.includes(key);\n                        })\n                        this.setSelectedRowKeys(newSelectedRowKeys)\n                    },\n                },\n                {\n                    key: 'invert',\n                    text: this.props.t(\"invert\"),\n                    onSelect: (changeableRowKeys: React.Key[]) => {\n                        let newSelectedRowKeys = changeableRowKeys.filter((key:React.Key) => {\n                            return !selectedRowKeys.includes(key);\n                        });\n                        newSelectedRowKeys = newSelectedRowKeys.concat(selectedRowKeys.filter((key: React.Key) => {\n                            return !changeableRowKeys.includes(key);\n                        }))\n                        this.setSelectedRowKeys(newSelectedRowKeys)\n                    },\n                },\n            ]\n        };\n\n        return (\n            <>\n                {this.props.uesAlldata && (\n                    <TableWithAllData\n                        {... this.props}\n                        rowSelection={this.props.disableSelection ? undefined : rowSelection}\n                    />\n                )}\n                {this.props.uesAlldata !== true && (\n                    <TableWithPagination\n                        {... this.props}\n                        rowSelection={this.props.disableSelection ? undefined : rowSelection}\n                    />\n                )}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    const TState: TableState = state.TableReduce\n    return {\n        tableData: TState.tableData\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>) => ({\n    setSelectedRowKeys: (data: React.Key[], name: string) =>\n        dispatch({type: \"setSelectedRowKeys\", data: data, name: name}),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(\n    withRouter(TableWithSelection)\n))\n\n"],"sourceRoot":""}